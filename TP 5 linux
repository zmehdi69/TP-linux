# TP5 : Self-hosted cloud

Dans ce TP on va exploiter le savoir accumul√© jusqu'alors pour **mettre en place une vraie solution : NextCloud.**

NextCloud est une solution **libre et opensource.** Il fournit une interface web qui **propose des fonctionnalit√©s** comme l'h√©bergement de fichiers, de la visioconf√©rence, des agendas partag√©s etc. Le tout sur une interface sexy.

On voit l'application NextCloud **dans le monde r√©el utilis√©e** par des particuliers comme des entreprises pour acc√©der √† ces fonctionnalit√©s.

**On s'approche donc un peu plus d'un cas r√©el pour ce TP**, avec √† la cl√© une jolie interface qui propose de vrais services :)

![There is no cloud](./pics/there_is_no_cloud.jpg)

## Sommaire

- [TP5 : Self-hosted cloud](#tp5--self-hosted-cloud)
  - [Sommaire](#sommaire)
  - [Checklist](#checklist)
- [I. Pr√©sentation des composants de NextCloud](#i-pr√©sentation-des-composants-de-nextcloud)
  - [1. Pr√©sentation du setup](#1-pr√©sentation-du-setup)
  - [2. Pr√©sentation des √©tapes](#2-pr√©sentation-des-√©tapes)
- [II. Let's go](#ii-lets-go)
- [Partie 1 : Mise en place et ma√Ætrise du serveur Web](#partie-1--mise-en-place-et-ma√Ætrise-du-serveur-web)
  - [1. Installation](#1-installation)
  - [2. Avancer vers la ma√Ætrise du service](#2-avancer-vers-la-ma√Ætrise-du-service)

## Checklist

![Checklist](./pics/checklist_is_here.jpg)

- [x] IP locale, statique ou dynamique
- [x] hostname d√©fini
- [x] firewall actif, qui ne laisse passer que le strict n√©cessaire
- [x] SSH fonctionnel
- [x] acc√®s Internet (une route par d√©faut, une carte NAT c'est tr√®s bien)
- [x] r√©solution de nom
- [x] SELinux activ√© en mode *"permissive"* (v√©rifiez avec `sestatus`, voir [m√©mo install VM tout en bas](https://gitlab.com/it4lik/b1-reseau-2022/-/blob/main/cours/memo/install_vm.md#4-pr%C3%A9parer-la-vm-au-clonage))

**Les √©l√©ments de la üìùchecklistüìù sont STRICTEMENT OBLIGATOIRES √† r√©aliser mais ne doivent PAS figurer dans le rendu.**

# I. Pr√©sentation des composants de NextCloud

## 1. Pr√©sentation du setup

NextCloud est une application web cod√©e en PHP, qui n√©cessite une base de donn√©es SQL pour fonctionner.

Nous allons proc√©der au setup suivant :

‚ûú üñ•Ô∏è **une VM `web.linux.tp5`**

- on y installera un serveur Web : **Apache**
  - le serveur web traite les requ√™tes HTTP re√ßues des clients
  - il fait passer le contenu des requ√™tes √† NextCloud
  - NextCloud d√©cide quels fichiers HTML, CSS, et JS il faut donner au client
  - le serveur Web effectue une r√©ponse HTTP qui contient ces fichiers HTML, CSS, et JS
- il faudra aussi installer PHP
  - pour que NextCloud puisse s'ex√©cuter
  - compliqu√© d'ex√©cuter du PHP si on a pas install√© le langage :)

![Apache](./pics/apache.png)

‚ûú üñ•Ô∏è **une VM `db.linux.tp5`**

- on y installera un service de base de donn√©es SQL : **MariaDB**
- NextCloud pourra s'y connecter
  - on aura cr√©√© une base de donn√©es expr√®s pour lui

![MariaDB](./pics/mariadb.png)

‚ûú **puis mise en place de NextCloud**

- sur la machine `web.linux.tp5`
- c'est donc une application PHP

![NextCloud](./pics/nextcloud.png)

## 2. Pr√©sentation des √©tapes

Dans l'ordre on va :

‚ûú **installer le serveur web** sur `web.linux.tp5`

- installer le service
- lancer le service
- explorer le service, prendre la ma√Ætrise dessus, regarder sur quel port il tourne, o√π est sa conf, ses logs, etc.

‚ûú **installer le service de base de donn√©es** sur `db.linux.tp5`

- installer le service
- lancer le service
- EXPLORER LE SERVICE, encore :)

‚ûú **pr√©parer le service de base de donn√©es pour NextCloud**

- se connecter au service en local
- cr√©er un utilisateur et une base de donn√©es d√©di√©s √† NextCloud

‚ûú **installer PHP** sur `web.linux.tp5`

- un peu chiant, il nous faut une version sp√©cifique, je vous ai pr√©par√© les instructions :)

‚ûú **installer NextCloud** sur `web.linux.tp5`

- petite commande pour r√©cup√©rer une archive sur internet qui contient le code
- on l'extrait au bon endroit, on g√®re les permissions
- et √ßa roule

‚ûú **on retourne configurer le serveur Web** sur `web.linux.tp5`

- on indiquera qu'on a mis en place un site Web (NextCloud) dans un dossier sp√©cifique
- on red√©marre et BAM c'est tout bon

‚ûú **acc√©der √† l'interface de NextCloud** depuis votre navigateur

# II. Let's go

Pour + de lisibilit√©, j'ai encore d√©coup√© le TP en 3 parties :

- [**Partie 1** : Mise en place et ma√Ætrise du serveur Web](./part1/README.md)
- [**Partie 2** : Mise en place et ma√Ætrise du serveur de base de donn√©es](./part2/README.md)
- [**Partie 3** : Configuration et mise en place de NextCloud](./part3/README.md)
- [**Partie 4** : Automatiser la r√©solution du TP](./part4/README.md) (partie bonus, facultatif)
# Partie 1 : Mise en place et ma√Ætrise du serveur Web

Dans cette partie on va installer le serveur web, et prendre un peu la ma√Ætrise dessus, en regardant o√π il stocke sa conf, ses logs, etc. Et en manipulant un peu tout √ßa bien s√ªr.

On va installer un serveur Web tr√®s tr√®s tr√®√®√®s utilis√© autour du monde : le serveur Web Apache.

- [TP5 : Self-hosted cloud](#tp5--self-hosted-cloud)
  - [Sommaire](#sommaire)
  - [Checklist](#checklist)
- [I. Pr√©sentation des composants de NextCloud](#i-pr√©sentation-des-composants-de-nextcloud)
  - [1. Pr√©sentation du setup](#1-pr√©sentation-du-setup)
  - [2. Pr√©sentation des √©tapes](#2-pr√©sentation-des-√©tapes)
- [II. Let's go](#ii-lets-go)
- [Partie 1 : Mise en place et ma√Ætrise du serveur Web](#partie-1--mise-en-place-et-ma√Ætrise-du-serveur-web)
  - [1. Installation](#1-installation)
  - [2. Avancer vers la ma√Ætrise du service](#2-avancer-vers-la-ma√Ætrise-du-service)

![Tipiii](../pics/linux_is_a_tipi.jpg)

## 1. Installation

üñ•Ô∏è **VM web.tp5.linux**

**N'oubliez pas de d√©rouler la [üìù**checklist**üìù](../README.md#checklist).**

| Machine         | IP            | Service     |
|-----------------|---------------|-------------|
| `web.tp5.linux` | `10.105.1.11` | Serveur Web |

üåû **Installer le serveur Apache**
```
[zmehdi@localhost ~]$ sudo dnf install httpd
```

üåû **D√©marrer le service Apache**
```
[zmehdi@localhost ~]$ sudo systemctl start httpd
[zmehdi@localhost ~]$ sudo systemctl enable httpd

Created symlink /etc/systemd/system/multi-user.target.wants/httpd.service ‚Üí /usr/lib/systemd/system/httpd.service.
```
  - ouvrez le port firewall n√©cessaire
```
[zmehdi@localhost ~]$ sudo ss -lantpu | grep httpd
[sudo] password for zmehdi:

tcp   LISTEN 0      128                   *:80              *:*     users:(("httpd",pid=2291,fd=4),("httpd",pid=2290,fd=4),("httpd",pid=2289,fd=4),("httpd",pid=2287,fd=4))
```
```
[zmehdi@localhost ~]$ sudo firewall-cmd --zone=public --permanent --add-port=80/tcp
Warning: ALREADY_ENABLED: 80:tcp
success
[zmehdi@localhost ~]$ sudo firewall-cmd --zone=public --permanent --add-port=443/tcp
Warning: ALREADY_ENABLED: 443:tcp
success
[zmehdi@localhost ~]$ sudo firewall-cmd --reload
success
```

**En cas de probl√®me** (IN CASE OF FIIIIRE) vous pouvez check les logs d'Apache :

```bash
# Demander √† systemd les logs relatifs au service httpd
$ sudo journalctl -xe -u httpd

# Consulter le fichier de logs d'erreur d'Apache
$ sudo cat /var/log/httpd/error_log

# Il existe aussi un fichier de log qui enregistre toutes les requ√™tes effectu√©es sur votre serveur
$ sudo cat /var/log/httpd/access_log
```

üåû **TEST**

- v√©rifier avec une commande `curl localhost` que vous joignez votre serveur web localement
```
[zmehdi@localhost ~]$ curl localhost | head -10
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  7620  100  7620    0     0  1488k      0 --:--:-- --:--:-- --:--:-- 1860k
<!doctype html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <title>HTTP Server Test Page powered by: Rocky Linux</title>
    <style type="text/css">
      /*<![CDATA[*/

      html {
```
- v√©rifier depuis votre PC que vous acc√©der √† la page par d√©faut
```
Zahreddine Mehdi@LAPTOP-B0TVBCEU MINGW64 ~
$ curl http://10.105.1.11/ |head -10
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  7620  100  7620    0     0  4059k      0 --:--:-- --:--:-- --:--:-- 7441k<!doctype html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <title>HTTP Server Test Page powered by: Rocky Linux</title>
    <style type="text/css">
      /*<![CDATA[*/

      html {
```

## 2. Avancer vers la ma√Ætrise du service

üåû **Le service Apache...**

- affichez le contenu du fichier `httpd.service` qui contient la d√©finition du service Apache
```
[zmehdi@localhost ~]$ cd /etc
[zmehdi@localhost etc]$ systemctl cat httpd | tail -10

ExecStart=/usr/sbin/httpd $OPTIONS -DFOREGROUND
ExecReload=/usr/sbin/httpd $OPTIONS -k graceful
# Send SIGWINCH for graceful stop
KillSignal=SIGWINCH
KillMode=mixed
PrivateTmp=true

[Install]
WantedBy=multi-user.target
```

üåû **D√©terminer sous quel utilisateur tourne le processus Apache**
```
[zmehdi@localhost etc]$ sudo cat /etc/httpd/conf/httpd.conf | grep apache

User apache
Group apache
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
```
```
[zmehdi@localhost etc]$ cd /etc/httpd
[zmehdi@localhost httpd]$ ps -ef | grep httpd

root        2287       1  0 11:02 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache      2288    2287  0 11:02 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache      2289    2287  0 11:02 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache      2290    2287  0 11:02 ?        00:00:01 /usr/sbin/httpd -DFOREGROUND
apache      2291    2287  0 11:02 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
zmehdi      2691    1728  0 12:40 pts/0    00:00:00 grep --color=auto httpd
```
```
[zmehdi@localhost httpd]$ cd /usr/share/testpage/
[zmehdi@localhost testpage]$ ls -al

total 12
drwxr-xr-x.  2 root root   24 Jan 17 10:55 .
drwxr-xr-x. 79 root root 4096 Jan 17 10:55 ..
-rw-r--r--.  1 root root 7620 Jul 27 20:04 index.html
```


üåû **Changer l'utilisateur utilis√© par Apache**

```
[zmehdi@localhost ~]$ sudo useradd zouzou -s /sbin/nologin -u 6969 -d /usr/share/httpd -p root
```
```
[sudo] password for zmehdi:
useradd: warning: the home directory already exists.
Not copying any file from skel directory into it.
```
```
[zmehdi@localhost ~]$ sudo cat /etc/passwd | tail -2
apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin
zouzou:x:6969:6969::/usr/share/httpd:/sbin/nologin
```
```
[zmehdi@localhost ~]$ sudo nano /etc/httpd/conf/httpd.conf
```
```
[zmehdi@localhost ~]$ sudo cat /etc/httpd/conf/httpd.conf | grep zouzou
[zmehdi@localhost ~]$ sudo systemctl restart httpd
[zmehdi@localhost ~]$ systemctl status httpd
‚óè httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendo>   Active: active (running) since Sun 2023-01-22 12:02:53 CET; 17s ago
     Docs: man:httpd.service(8)
 Main PID: 4015 (httpd)
   Status: "Running, listening on: port 80"
    Tasks: 213 (limit: 4916)
   Memory: 25.0M
   CGroup: /system.slice/httpd.service
           ‚îú‚îÄ4015 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ4017 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ4018 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ4019 /usr/sbin/httpd -DFOREGROUND
           ‚îî‚îÄ4020 /usr/sbin/httpd -DFOREGROUND

Jan 22 12:02:53 localhost.localdomain systemd[1]: httpd.service: Succeed>Jan 22 12:02:53 localhost.localdomain systemd[1]: Stopped The Apache HTT>Jan 22 12:02:53 localhost.localdomain systemd[1]: Starting The Apache HT>Jan 22 12:02:53 localhost.localdomain httpd[4015]: AH00558: httpd: Could>Jan 22 12:02:53 localhost.localdomain httpd[4015]: Server configured, li>Jan 22 12:02:53 localhost.localdomain systemd[1]: Started The Apache HTT>lines 1-21/21 (END)
```
üåû **Faites en sorte que Apache tourne sur un autre port**
```
[zmehdi@localhost ~]$ sudo cat /etc/httpd/conf/httpd.conf | grep 
```
```
Listen
```
```
[sudo] password for zmehdi:
# Listen: Allows you to bind Apache to specific IP addresses and/or
# Change this to Listen on specific IP addresses as shown below to
#Listen 12.34.56.78:80
Listen 80
```
```
[zmehdi@localhost ~]$ sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp
success
[zmehdi@localhost ~]$ sudo firewall-cmd --reload
success
[zmehdi@localhost ~]$ sudo systemctl restart httpd
[zmehdi@localhost ~]$ systemctl status httpd
‚óè httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor p>
   Active: active (running) since Sun 2023-01-29 19:27:17 CET; 1min 35s ago
     Docs: man:httpd.service(8)
 Main PID: 7527 (httpd)
   Status: "Running, listening on: port 80"
    Tasks: 213 (limit: 4916)
   Memory: 25.0M
   CGroup: /system.slice/httpd.service
           ‚îú‚îÄ7527 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ7528 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ7529 /usr/sbin/httpd -DFOREGROUND
           ‚îú‚îÄ7530 /usr/sbin/httpd -DFOREGROUND
           ‚îî‚îÄ7531 /usr/sbin/httpd -DFOREGROUND

Jan 29 19:27:17 localhost.localdomain systemd[1]: httpd.service: Succeeded.
Jan 29 19:27:17 localhost.localdomain systemd[1]: Stopped The Apache HTTP S>
Jan 29 19:27:17 localhost.localdomain systemd[1]: Starting The Apache HTTP >
Jan 29 19:27:17 localhost.localdomain httpd[7527]: AH00558: httpd: Could no>
Jan 29 19:27:17 localhost.localdomain systemd[1]: Started The Apache HTTP S>
Jan 29 19:27:17 localhost.localdomain httpd[7527]: Server configured, liste>

[1]+  Stopped                 systemctl status httpd
```
```
[zmehdi@localhost ~]$ sudo ss -lnaptu | grep 80
tcp   LISTEN 0      128                   *:80              *:*     users:(("httpd",pid=7531,fd=4),("httpd",pid=7530,fd=4),("httpd",pid=7529,fd=4),("httpd",pid=7527,fd=4)
```

üìÅ **Fichier `/etc/httpd/conf/httpd.conf`**

‚ûú **Si c'est tout bon vous pouvez passer √† [la partie 2.](../part2/README.md)**